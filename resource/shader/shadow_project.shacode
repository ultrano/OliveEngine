#include "OvVShaderConst.h"
#include "OvPShaderConst.h"



sampler light_depth_sampler	: register(s0);

struct vertex_input
{
	float3 pos			: POSITION;
};

struct vertex_output
{
	float4 pos			: POSITION;
	float4 depth_tex0	: TEXCOORD0;
	float4 light_depth	: TEXCOORD1;
};

struct pixel_input
{
	float4 depth_tex0	: TEXCOORD0;
	float4 light_depth	: TEXCOORD1;
};

void Vmain( in vertex_input input, out vertex_output output )
{
	vector pos = vector( input.pos, 1.0 );
	
	output.pos			= mul( pos, WorldViewProject );
	output.depth_tex0	= mul( pos, WorldLightProjectBias );
	output.light_depth	= mul( pos, WorldLightProject );	
};

void Pmain( in pixel_input input, out vector col0 : COLOR0 )
{
	float shadow = tex2Dproj( light_depth_sampler, input.depth_tex0 ).x;
	
	col0 = ( shadow * input.light_depth.w < input.light_depth.z - 0.03f)? 0:1;	
	col0 = ( input.light_depth.z - 0.03f <= 0 )? 0 : col0 ;
};